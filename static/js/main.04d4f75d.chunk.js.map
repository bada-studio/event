{"version":3,"sources":["js/scatterBridge.js","js/app.js","index.js"],"names":["ScatterBridge","network","appName","Object","classCallCheck","this","ScatterJS","plugins","ScatterEOS","scatter","currentAccount","eosOptions","expireInSeconds","eosApi","eos","Eos","isConnected","connect","then","connected","_this","console","log","requiredFields","accounts","getIdentity","_this2","identity","find","x","blockchain","actions","length","transact","blocksBehind","expireSeconds","contract","actionName","data","perm","arguments","undefined","authority","account","name","authorization","actor","permission","App","props","possibleConstructorReturn","getPrototypeOf","call","protocol","host","port","chainId","onClick","bind","assertThisInitialized","react_default","a","createElement","className","Component","ReactDOM","render","js_app","document","getElementById"],"mappings":"2bAIqBA,aAEjB,SAAAA,EAAYC,EAASC,GAAUC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAC3BK,KAAKH,QAAUA,EACfI,IAAUC,QAAQ,IAAIC,KAEtBH,KAAKI,QAAUH,IAAUG,QACzBJ,KAAKJ,QAAUA,EACfI,KAAKK,eAAiB,KAEtBL,KAAKM,WAAa,CAAEC,gBAAgB,IACpCP,KAAKQ,OAASR,KAAKI,QAAQK,IAAIT,KAAKJ,QAASc,IAAKV,KAAKM,YACvDN,KAAKW,aAAc,2LAIbX,KAAKI,QAAQQ,QAAQZ,KAAKH,SAASgB,KAAK,SAAAC,GAC1CC,EAAKJ,YAAcG,EACnBE,QAAQC,IAAI,aAAeH,sQAO3Bd,KAAKW,mCACCO,EAAiB,CAAEC,SAAS,CAACnB,KAAKJ,mBAClCI,KAAKI,QAAQgB,YAAYF,GAAgBL,KAAK,WAChDQ,EAAKhB,eAAiBgB,EAAKjB,QAAQkB,SAASH,SAASI,KAAK,SAAAC,GAAC,MAAqB,QAAjBA,EAAEC,4CAGrET,QAAQC,IAAI,oMAIPS,uEACNA,EAAQC,uCACD3B,KAAKQ,OAAOoB,SAAS,CACvBF,QAASA,GACV,CAACG,aAAc,EAAGC,cAAe,8IAI9BlC,GACVI,KAAKQ,OAASR,KAAKI,QAAQK,IAAIb,EAASc,IAAKV,KAAKM,+CAG3CyB,EAAUC,EAAYC,GAA4C,IAAtCC,EAAsCC,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAA/BnC,KAAKK,eAAegC,UAC9D,MAAO,CACHC,QAASP,EACTQ,KAAMP,EACNQ,cAAe,CAAC,CACZC,MAAOzC,KAAKK,eAAekC,KAC3BG,WAAYR,IAEhBD,KAAMA,YCvBHU,cA/Bb,SAAAA,EAAYC,GAAO,IAAA7B,EAAA,OAAAjB,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,IACjB5B,EAAAjB,OAAA+C,EAAA,EAAA/C,CAAAE,KAAAF,OAAAgD,EAAA,EAAAhD,CAAA6C,GAAAI,KAAA/C,KAAM4C,KAEDhD,QAAU,CACb6B,WAAY,MACZuB,SAAU,QACVC,KAAM,iBACNC,KAAM,IACNC,QAAS,oEAGXpC,EAAKX,QAAU,IAAIT,EAAcoB,EAAKnB,QAAS,oBAC/CmB,EAAKqC,QAAUrC,EAAKqC,QAAQC,KAAbvD,OAAAwD,EAAA,EAAAxD,QAAAwD,EAAA,EAAAxD,CAAAiB,KAZEA,iMAgBXf,KAAKI,QAAQQ,iCACbZ,KAAKI,QAAQgB,iJAInB,OACEmC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,UAAQL,QAASpD,KAAKoD,SAAtB,iBAzBQO,aCClBC,IAASC,OAAON,EAAAC,EAAAC,cAACK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.04d4f75d.chunk.js","sourcesContent":["import ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs';\nimport Eos from 'eosjs';\n\nexport default class ScatterBridge {\n\n    constructor(network, appName) {\n        this.appName = appName;\n        ScatterJS.plugins(new ScatterEOS());\n\n        this.scatter = ScatterJS.scatter;\n        this.network = network;\n        this.currentAccount = null;\n\n        this.eosOptions = { expireInSeconds:60 };\n        this.eosApi = this.scatter.eos(this.network, Eos, this.eosOptions);\n        this.isConnected = false;\n    }\n\n    async connect() {\n        await this.scatter.connect(this.appName).then(connected => {\n            this.isConnected = connected;\n            console.log(\"connected:\" + connected);\n            //window.ScatterJS = null;\n            //window.ScatterJS = null;\n        });\n    }\n\n    async getIdentity() {\n        if (this.isConnected) {\n            const requiredFields = { accounts:[this.network] };\n            await this.scatter.getIdentity(requiredFields).then(() => {\n                this.currentAccount = this.scatter.identity.accounts.find(x => x.blockchain === \"eos\");\n            });\n        } else {\n            console.log(\"check connection first!\");\n        }\n    }\n\n    async sendTx(actions) {\n        if(actions.length) {\n            await this.eosApi.transact({\n                actions: actions\n            }, {blocksBehind: 3, expireSeconds: 30 });\n        }\n    }\n\n    updateNetwork(network) {\n        this.eosApi = this.scatter.eos(network, Eos, this.eosOptions);\n    }\n\n    makeAction(contract, actionName, data, perm = this.currentAccount.authority) {\n        return {\n            account: contract,\n            name: actionName,\n            authorization: [{\n                actor: this.currentAccount.name,\n                permission: perm// this.currentAccount.authority\n            }],\n            data: data\n        };\n    }\n}","import React, { Component } from \"react\";\nimport \"../css/app.css\";\nimport ScatterBridge from \"./scatterBridge\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.network = {\n      blockchain: \"eos\",\n      protocol: \"https\",\n      host: \"api.eoseoul.io\",\n      port: 443,\n      chainId: \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\"\n    };\n\n    this.scatter = new ScatterBridge(this.network, \"EOS Knight Event\");\n    this.onClick = this.onClick.bind(this);\n  }\n\n  async onClick() {\n    await this.scatter.connect();\n    await this.scatter.getIdentity();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <button onClick={this.onClick}>Test</button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './js/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}