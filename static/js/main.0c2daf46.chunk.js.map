{"version":3,"sources":["js/scatterBridge.js","js/app.js","index.js"],"names":["ScatterBridge","network","appName","Object","classCallCheck","this","ScatterJS","plugins","ScatterEOS","account","eosOptions","expireInSeconds","isConnected","contract","eosApi","Network","fromJson","net","connect","then","connected","console","log","_this","eos","Eos","login","id","_this2","name","getContract","logout","_this3","actions","length","transact","blocksBehind","expireSeconds","actionName","data","authorization","actor","permission","authority","App","props","possibleConstructorReturn","getPrototypeOf","call","blockchain","protocol","host","port","chainId","scatter","onClick","bind","assertThisInitialized","loadContract","react_default","a","createElement","className","Component","ReactDOM","render","js_app","document","getElementById"],"mappings":"2bAIqBA,aAEnB,SAAAA,EAAYC,EAASC,GAAUC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAC7BK,KAAKH,QAAUA,EACfI,IAAUC,QAAQ,IAAIC,KAEtBH,KAAKI,QAAU,KACfJ,KAAKK,WAAa,CAAEC,gBAAgB,IACpCN,KAAKO,aAAc,EACnBP,KAAKQ,SAAW,KAEhBR,KAAKS,OAAS,KACdT,KAAKJ,QAAUK,IAAUS,QAAQC,SAASf,qLAIpCgB,EAAMZ,KAAKJ,iBACXK,IAAUY,QAAQb,KAAKH,QAAS,CAACe,QAAME,KAAK,SAAAC,GAChDC,QAAQC,IAAI,aAAeF,GAC3BG,EAAKX,YAAcQ,EACfA,IACFG,EAAKT,OAASR,IAAUkB,IAAID,EAAKtB,QAASwB,KAC1CJ,QAAQC,IAAI,8QAMZjB,KAAKO,4CACDN,IAAUoB,QAAQP,KAAK,SAAAQ,GAC3BC,EAAKnB,QAAUH,IAAUG,QAAQ,OACjCY,QAAQC,IAAIM,EAAKnB,wCAGnBY,QAAQC,IAAI,0MAIGO,mFACKxB,KAAKS,OAAOgB,YAAYD,UAA9CxB,KAAKQ,uRAICP,IAAUyB,SAASZ,KAAK,WAC5BE,QAAQC,IAAI,gBACZU,EAAKvB,QAAU,2KAINwB,uEACRA,EAAQC,uCACH7B,KAAKS,OAAOqB,SAAS,CACzBF,QAASA,GACR,CAACG,aAAc,EAAGC,cAAe,2IAI7BxB,EAAUyB,EAAYC,GAC/B,MAAO,CACL9B,QAASI,EACTgB,KAAMS,EACNE,cAAe,CAAC,CACdC,MAAOpC,KAAKI,QAAQoB,KACpBa,WAAYrC,KAAKI,QAAQkC,YAE3BJ,KAAMA,YC/BGK,cAjCb,SAAAA,EAAYC,GAAO,IAAAtB,EAAA,OAAApB,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,IACjBrB,EAAApB,OAAA2C,EAAA,EAAA3C,CAAAE,KAAAF,OAAA4C,EAAA,EAAA5C,CAAAyC,GAAAI,KAAA3C,KAAMwC,KAED5C,QAAU,CACbgD,WAAY,MACZC,SAAU,QACVC,KAAM,iBACNC,KAAM,IACNC,QAAS,oEAGX9B,EAAK+B,QAAU,IAAItD,EAAcuB,EAAKtB,QAAS,oBAC/CsB,EAAKgC,QAAUhC,EAAKgC,QAAQC,KAAbrD,OAAAsD,EAAA,EAAAtD,QAAAsD,EAAA,EAAAtD,CAAAoB,KAZEA,iMAgBXlB,KAAKiD,QAAQpC,iCACbb,KAAKiD,QAAQ5B,+BACbrB,KAAKiD,QAAQI,aAAa,mJAKhC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,UAAQN,QAASlD,KAAKkD,SAAtB,iBA3BQQ,aCClBC,IAASC,OAAON,EAAAC,EAAAC,cAACK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0c2daf46.chunk.js","sourcesContent":["import ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs';\nimport Eos from 'eosjs';\n\nexport default class ScatterBridge {\n\n  constructor(network, appName) {\n    this.appName = appName;\n    ScatterJS.plugins(new ScatterEOS());\n\n    this.account = null;\n    this.eosOptions = { expireInSeconds:60 };\n    this.isConnected = false;\n    this.contract = null;\n\n    this.eosApi = null;\n    this.network = ScatterJS.Network.fromJson(network);\n  }\n\n  async connect() {\n    const net = this.network;\n    await ScatterJS.connect(this.appName, {net}).then(connected => {\n      console.log(\"connected:\" + connected);\n      this.isConnected = connected;\n      if (connected) {\n        this.eosApi = ScatterJS.eos(this.network, Eos);\n        console.log(\"create eos Api\");\n      }\n    });\n  }\n\n  async login() {\n    if (this.isConnected) {\n      await ScatterJS.login().then(id => {\n        this.account = ScatterJS.account('eos');\n        console.log(this.account);\n      });\n    } else {\n      console.log(\"check connection first!\");\n    }\n  }\n\n  async loadContract(name) {\n    this.contract = await this.eosApi.getContract(name);\n  }\n\n  async logout() {\n    await ScatterJS.logout().then(() => {\n      console.log(\"logout done!\");\n      this.account = null;\n    });\n  }\n\n  async sendTx(actions) {\n    if(actions.length) {\n      await this.eosApi.transact({\n        actions: actions\n      }, {blocksBehind: 3, expireSeconds: 30 });\n    }\n  }\n\n  makeAction(contract, actionName, data) {\n    return {\n      account: contract,\n      name: actionName,\n      authorization: [{\n        actor: this.account.name,\n        permission: this.account.authority\n      }],\n      data: data\n    };\n  }\n}","import React, { Component } from \"react\";\nimport \"../css/app.css\";\nimport ScatterBridge from \"./scatterBridge\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.network = {\n      blockchain: \"eos\",\n      protocol: \"https\",\n      host: \"api.eoseoul.io\",\n      port: 443,\n      chainId: \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\"\n    };\n\n    this.scatter = new ScatterBridge(this.network, \"EOS Knight Event\");\n    this.onClick = this.onClick.bind(this);\n  }\n\n  async onClick() {\n    await this.scatter.connect();\n    await this.scatter.login();\n    await this.scatter.loadContract(\"eosknightsio\");\n//    await this.scatter.;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <button onClick={this.onClick}>Test</button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './js/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}