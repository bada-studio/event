{"version":3,"sources":["js/scatterBridge.js","js/app.js","index.js"],"names":["ScatterBridge","network","appName","Object","classCallCheck","this","ScatterJS","plugins","ScatterEOS","Network","fromJson","account","eosOptions","expireInSeconds","eosApi","isConnected","net","connect","then","connected","console","log","_this","rpc","JsonRpc","fullhost","eos","Api","beta3","login","_this2","logout","_this3","actions","length","transact","blocksBehind","expireSeconds","contract","actionName","data","name","authorization","actor","permission","authority","App","props","possibleConstructorReturn","getPrototypeOf","call","blockchain","protocol","host","port","chainId","scatter","onClick","bind","assertThisInitialized","sendTx","makeAction","from","to","quantity","memo","react_default","a","createElement","className","Component","ReactDOM","render","js_app","document","getElementById"],"mappings":"uQAIqBA,aAEnB,SAAAA,EAAYC,EAASC,GAAUC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAC7BK,KAAKH,QAAUA,EACfI,IAAUC,QAAQ,IAAIC,KAEtBH,KAAKJ,QAAUK,IAAUG,QAAQC,SAAST,GAC1CI,KAAKM,QAAU,KACfN,KAAKO,WAAa,CAAEC,gBAAgB,IACpCR,KAAKS,OAAS,KACdT,KAAKU,aAAc,oLAIbC,EAAMX,KAAKJ,iBACXK,IAAUW,QAAQZ,KAAKH,QAAS,CAACc,QAAME,KAAK,SAAAC,GAGhD,GAFAC,QAAQC,IAAI,aAAeF,GAC3BG,EAAKP,YAAcI,EACfA,EAAW,CACb,IAAMI,EAAM,IAAIC,UAAQF,EAAKrB,QAAQwB,YACrCH,EAAKR,OAASR,IAAUoB,IAAIJ,EAAKrB,QAAS0B,MAAK,CAACJ,MAAKK,OAAM,gQAM3DvB,KAAKU,4CACDT,IAAUuB,QAAQX,KAAK,WAC3BY,EAAKnB,QAAUL,IAAUK,QAAQ,OACjCS,QAAQC,IAAIS,EAAKnB,wCAGnBS,QAAQC,IAAI,iSAKRf,IAAUyB,SAASb,KAAK,WAC5BE,QAAQC,IAAI,gBACZW,EAAKrB,QAAU,2KAINsB,uEACRA,EAAQC,uCACH7B,KAAKS,OAAOqB,SAAS,CACzBF,QAASA,GACR,CAACG,aAAc,EAAGC,cAAe,2IAI7BC,EAAUC,EAAYC,GAC/B,MAAO,CACL7B,QAAS2B,EACTG,KAAMF,EACNG,cAAe,CAAC,CACdC,MAAOtC,KAAKM,QAAQ8B,KACpBG,WAAYvC,KAAKM,QAAQkC,YAE3BL,KAAMA,YCjBGM,cAzCb,SAAAA,EAAYC,GAAO,IAAAzB,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,IACjBxB,EAAAnB,OAAA6C,EAAA,EAAA7C,CAAAE,KAAAF,OAAA8C,EAAA,EAAA9C,CAAA2C,GAAAI,KAAA7C,KAAM0C,KAED9C,QAAU,CACbkD,WAAY,MACZC,SAAU,QACVC,KAAM,iBACNC,KAAM,IACNC,QAAS,oEAGXjC,EAAKkC,QAAU,IAAIxD,EAAcsB,EAAKrB,QAAS,oBAC/CqB,EAAKmC,QAAUnC,EAAKmC,QAAQC,KAAbvD,OAAAwD,EAAA,EAAAxD,QAAAwD,EAAA,EAAAxD,CAAAmB,KAZEA,iMAgBXjB,KAAKmD,QAAQvC,iCACbZ,KAAKmD,QAAQ3B,+BACbxB,KAAKmD,QAAQI,OAAO,CAACvD,KAAKmD,QAAQK,WACtC,cACA,WACA,CACEC,KAAMzD,KAAKmD,QAAQ7C,QAAQ8B,KAC3BsB,GAAI,eACJC,SAAU,aACVC,KAAM,8IAMV,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,UAAQX,QAASpD,KAAKoD,SAAtB,iBAnCQa,aCClBC,IAASC,OAAON,EAAAC,EAAAC,cAACK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.14dbad6a.chunk.js","sourcesContent":["import ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs2';\nimport {JsonRpc, Api} from 'eosjs';\n\nexport default class ScatterBridge {\n\n  constructor(network, appName) {\n    this.appName = appName;\n    ScatterJS.plugins(new ScatterEOS());\n\n    this.network = ScatterJS.Network.fromJson(network);\n    this.account = null;\n    this.eosOptions = { expireInSeconds:60 };\n    this.eosApi = null;\n    this.isConnected = false;\n  }\n\n  async connect() {\n    const net = this.network;\n    await ScatterJS.connect(this.appName, {net}).then(connected => {\n      console.log(\"connected:\" + connected);\n      this.isConnected = connected;\n      if (connected) {\n        const rpc = new JsonRpc(this.network.fullhost());\n        this.eosApi = ScatterJS.eos(this.network, Api, {rpc, beta3:true});\n      }\n    });\n  }\n\n  async login() {\n    if (this.isConnected) {\n      await ScatterJS.login().then(() => {\n        this.account = ScatterJS.account('eos');\n        console.log(this.account);\n      });\n    } else {\n      console.log(\"check connection first!\");\n    }\n  }\n\n  async logout() {\n    await ScatterJS.logout().then(() => {\n      console.log(\"logout done!\");\n      this.account = null;\n    });\n  }\n\n  async sendTx(actions) {\n    if(actions.length) {\n      await this.eosApi.transact({\n        actions: actions\n      }, {blocksBehind: 3, expireSeconds: 30 });\n    }\n  }\n\n  makeAction(contract, actionName, data) {\n    return {\n      account: contract,\n      name: actionName,\n      authorization: [{\n        actor: this.account.name,\n        permission: this.account.authority\n      }],\n      data: data\n    };\n  }\n}","import React, { Component } from \"react\";\nimport \"../css/app.css\";\nimport ScatterBridge from \"./scatterBridge\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.network = {\n      blockchain: \"eos\",\n      protocol: \"https\",\n      host: \"api.eoseoul.io\",\n      port: 443,\n      chainId: \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\"\n    };\n\n    this.scatter = new ScatterBridge(this.network, \"EOS Knight Event\");\n    this.onClick = this.onClick.bind(this);\n  }\n\n  async onClick() {\n    await this.scatter.connect();\n    await this.scatter.login();\n    await this.scatter.sendTx([this.scatter.makeAction(\n      \"eosio.token\", \n      \"transfer\", \n      {\n        from: this.scatter.account.name,\n        to: 'eosknightscd',\n        quantity: '0.0001 EOS',\n        memo: \"test\"\n      }\n    )]);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <button onClick={this.onClick}>Test</button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './js/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}