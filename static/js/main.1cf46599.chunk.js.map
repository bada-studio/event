{"version":3,"sources":["Components/PostWrapper/PostWrapper.js","Components/Header/Header.js","Components/EventPost/EventPost.js","Services/ChainService.js","Containers/PostContainer/PostContainer.js","Utils/ScatterBridge.js","App.js","index.js"],"names":["PostWrapper","_ref","children","react_default","a","createElement","className","Header","EventPost","title","body","Button","color","content","icon","labelPosition","ChainService","network","Object","classCallCheck","this","confg","ConfigService","concat","protocol","host","port","code","table","axios","post","getTableUrl","PostContainer","props","_this","possibleConstructorReturn","getPrototypeOf","call","fetchItemEventInfo","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","setState","fetching","chain","readTable","sent","console","log","data","eventInfo","stop","state","Config","_this$state","Components_PostWrapper_PostWrapper","Components_EventPost_EventPost","Component","ScatterBridge","appName","ScatterJS","plugins","ScatterEOS","account","eosOptions","expireInSeconds","isConnected","contract","eosApi","net","Network","fromJson","auth","connect","error","eos","Eos","login","then","id","authorization","name","authority","App","scatter","onClick","bind","assertThisInitialized","loadContract","signup","Components_Header_Header","Containers_PostContainer_PostContainer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1cf46599.chunk.js","sourcesContent":["import React from 'react';\nimport './PostWrapper.css'\n\nconst PostWrapper = ({children}) => {\n    return (\n        <div className=\"PostWrapper\">\n            {children}\n        </div>\n    );\n};\n\nexport default PostWrapper;\n","import React from 'react';\nimport './Header.css';\n\nconst Header = () => (\n    <div className=\"Header\">\n        POSTS\n    </div>\n)\n\nexport default Header;","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport './EventPost.css';\n\nconst EventPost = ({title, body}) => (\n  <div className=\"EventPost\">\n    <h1>{title}</h1>\n    <p>\n      {body}\n    </p>\n\n    <Button\n        color=\"teal\"\n        content=\"Next\"\n        icon=\"right arrow\"\n        labelPosition=\"right\"\n        className=\"Navigate-right-button\"\n    />     \n  </div>\n);\n\nexport default EventPost;","import axios from 'axios';\nimport ConfigService from './ConfigService';\n\nexport default class ChainService {\n  constructor(network) {\n    this.confg = new ConfigService();\n    this.network = this.confg.network;\n  }\n\n  getTableUrl() {\n    const url = `${this.network.protocol}://\n                 ${this.network.host}: \n                 ${this.network.port}/v1/chain/get_table_rows`;\n    return url;    \n  }\n\n  async readTable(code, table) {\n    return await axios.post(this.getTableUrl(), {\n        code: code,\n        table: table\n      }\n    );\n  }\n}","import React, {Component} from 'react';\nimport { PostWrapper, EventPost } from '../../Components';\nimport { ChainService } from \"../../Services\";\nimport Config from \"../../Config\";\n\nclass PostContainer extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      fetching: false, \n      eventInfo: null\n    };\n\n    this.chain = new ChainService(Config.network);\n  }\n\n  fetchItemEventInfo = async () => {\n    this.setState({\n        fetching: true\n    });\n\n    const res = await this.chain.readTable(\"eosknightsio\", \"itemevt\");\n    console.log(res.data);\n\n    this.setState({\n      eventInfo: res.data,\n      fetching: false\n    });    \n  }\n\n  componentDidMount() {\n    this.fetchItemEventInfo();\n  }\n\n  render() {\n    const {fetching, eventInfo} = this.state;\n\n    return (\n      <PostWrapper>\n        <EventPost\n            title=\"from test\"\n            body=\"from body\"\n        />\n      </PostWrapper>\n    );\n  }\n}\n\nexport default PostContainer;\n","import ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs';\nimport Eos from 'eosjs';\n\nexport default class ScatterBridge {\n\n  constructor(network, appName) {\n    this.appName = appName;\n    ScatterJS.plugins(new ScatterEOS());\n\n    this.account = null;\n    this.eosOptions = { expireInSeconds:60 };\n    this.isConnected = false;\n    this.contract = null;\n\n    this.eosApi = null;\n    this.net = ScatterJS.Network.fromJson(network);\n    this.auth = null;\n  }\n\n  async connect() {\n    const network = this.net;\n    this.isConnected = await ScatterJS.connect(this.appName, {network});\n    if (!this.isConnected) {\n      return console.error('connection failed');\n    }\n\n    this.eosApi = ScatterJS.eos(this.net, Eos);\n    await ScatterJS.login().then(id => {\n        if(!id) return console.error('no identity');\n        this.account = ScatterJS.account('eos');\n        this.auth = {authorization:[`${this.account.name}@${this.account.authority}`]};\n    });\n  }\n\n  async loadContract(name) {\n    this.contract = await this.eosApi.contract(name);\n  }\n}","import React, { Component } from \"react\";\nimport { Header, PostWrapper } from \"./Components\";\nimport { PostContainer } from \"./Containers\";\nimport ScatterBridge from \"./Utils/ScatterBridge\";\nimport Config from \"./Config\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n\n    this.scatter = new ScatterBridge(Config.network, \"EK Event\");\n    this.onClick = this.onClick.bind(this);\n  }\n\n  async onClick() {\n    const scatter = this.scatter;\n    await scatter.connect();\n    await scatter.loadContract(\"eosknightsio\");\n    await scatter.contract.signup(scatter.account.name, scatter.auth);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header/>\n        <PostContainer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}