{"version":3,"sources":["js/scatterBridge.js","js/app.js","index.js"],"names":["ScatterBridge","network","appName","Object","classCallCheck","this","ScatterJS","plugins","ScatterEOS","Network","fromJson","account","eosOptions","expireInSeconds","eosApi","eos","Eos","isConnected","connect","then","connected","_this","console","log","login","_this2","logout","_this3","actions","length","transact","blocksBehind","expireSeconds","contract","actionName","data","perm","arguments","undefined","authority","name","authorization","actor","permission","App","props","possibleConstructorReturn","getPrototypeOf","call","blockchain","protocol","host","port","chainId","scatter","onClick","bind","assertThisInitialized","sendTx","from","to","quantity","memo","react_default","a","createElement","className","Component","ReactDOM","render","js_app","document","getElementById"],"mappings":"0bAIqBA,aAEnB,SAAAA,EAAYC,EAASC,GAAUC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAC7BK,KAAKH,QAAUA,EACfI,IAAUC,QAAQ,IAAIC,KAEtBH,KAAKJ,QAAUK,IAAUG,QAAQC,SAAST,GAC1CI,KAAKM,QAAU,KACfN,KAAKO,WAAa,CAAEC,gBAAgB,IACpCR,KAAKS,OAASR,IAAUS,IAAIV,KAAKJ,QAASe,IAAKX,KAAKO,YACpDP,KAAKY,aAAc,2LAIbX,IAAUY,QAAQb,KAAKH,QAASG,KAAKJ,SAASkB,KAAK,SAAAC,GACvDC,EAAKJ,YAAcG,EACnBE,QAAQC,IAAI,aAAeH,8PAKzBf,KAAKY,4CACDX,IAAUkB,QAAQL,KAAK,WAC3BM,EAAKd,QAAUL,IAAUK,QAAQ,OACjCW,QAAQC,IAAIE,EAAKd,wCAGnBW,QAAQC,IAAI,iSAKRjB,IAAUoB,SAASP,KAAK,WAC5BG,QAAQC,IAAI,gBACZI,EAAKhB,QAAU,2KAINiB,uEACRA,EAAQC,uCACHxB,KAAKS,OAAOgB,SAAS,CACzBF,QAASA,GACR,CAACG,aAAc,EAAGC,cAAe,8IAI1B/B,GACZI,KAAKS,OAASR,IAAUS,IAAId,EAASe,IAAKX,KAAKO,+CAGtCqB,EAAUC,EAAYC,GAAqC,IAA/BC,EAA+BC,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAAxBhC,KAAKM,QAAQ4B,UACzD,MAAO,CACL5B,QAASsB,EACTO,KAAMN,EACNO,cAAe,CAAC,CACdC,MAAOrC,KAAKM,QAAQ6B,KACpBG,WAAYP,IAEdD,KAAMA,YCpBGS,cArCb,SAAAA,EAAYC,GAAO,IAAAxB,EAAA,OAAAlB,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,IACjBvB,EAAAlB,OAAA2C,EAAA,EAAA3C,CAAAE,KAAAF,OAAA4C,EAAA,EAAA5C,CAAAyC,GAAAI,KAAA3C,KAAMwC,KAED5C,QAAU,CACbgD,WAAY,MACZC,SAAU,QACVC,KAAM,iBACNC,KAAM,IACNC,QAAS,oEAGXhC,EAAKiC,QAAU,IAAItD,EAAcqB,EAAKpB,QAAS,oBAC/CoB,EAAKkC,QAAUlC,EAAKkC,QAAQC,KAAbrD,OAAAsD,EAAA,EAAAtD,QAAAsD,EAAA,EAAAtD,CAAAkB,KAZEA,iMAgBXhB,KAAKiD,QAAQpC,iCACbb,KAAKiD,QAAQ9B,+BACbnB,KAAKiD,QAAQI,OAAO,CACtBC,KAAMtD,KAAKiD,QAAQ3C,QAAQ6B,KAC3BoB,GAAI,eACJC,SAAU,aACVC,KAAM,4IAKV,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,UAAQV,QAASlD,KAAKkD,SAAtB,iBA/BQY,aCClBC,IAASC,OAAON,EAAAC,EAAAC,cAACK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3b70fbf8.chunk.js","sourcesContent":["import ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs';\nimport Eos from 'eosjs';\n\nexport default class ScatterBridge {\n\n  constructor(network, appName) {\n    this.appName = appName;\n    ScatterJS.plugins(new ScatterEOS());\n\n    this.network = ScatterJS.Network.fromJson(network);\n    this.account = null;\n    this.eosOptions = { expireInSeconds:60 };\n    this.eosApi = ScatterJS.eos(this.network, Eos, this.eosOptions);\n    this.isConnected = false;\n  }\n\n  async connect() {\n    await ScatterJS.connect(this.appName, this.network).then(connected => {\n      this.isConnected = connected;\n      console.log(\"connected:\" + connected);\n    });\n  }\n\n  async login() {\n    if (this.isConnected) {\n      await ScatterJS.login().then(() => {\n        this.account = ScatterJS.account('eos');\n        console.log(this.account);\n      });\n    } else {\n      console.log(\"check connection first!\");\n    }\n  }\n\n  async logout() {\n    await ScatterJS.logout().then(() => {\n      console.log(\"logout done!\");\n      this.account = null;\n    });\n  }\n\n  async sendTx(actions) {\n    if(actions.length) {\n      await this.eosApi.transact({\n        actions: actions\n      }, {blocksBehind: 3, expireSeconds: 30 });\n    }\n  }\n\n  updateNetwork(network) {\n    this.eosApi = ScatterJS.eos(network, Eos, this.eosOptions);\n  }\n\n  makeAction(contract, actionName, data, perm = this.account.authority) {\n    return {\n      account: contract,\n      name: actionName,\n      authorization: [{\n        actor: this.account.name,\n        permission: perm// this.currentAccount.authority\n      }],\n      data: data\n    };\n  }\n}","import React, { Component } from \"react\";\nimport \"../css/app.css\";\nimport ScatterBridge from \"./scatterBridge\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.network = {\n      blockchain: \"eos\",\n      protocol: \"https\",\n      host: \"api.eoseoul.io\",\n      port: 443,\n      chainId: \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\"\n    };\n\n    this.scatter = new ScatterBridge(this.network, \"EOS Knight Event\");\n    this.onClick = this.onClick.bind(this);\n  }\n\n  async onClick() {\n    await this.scatter.connect();\n    await this.scatter.login();\n    await this.scatter.sendTx({\n        from: this.scatter.account.name,\n        to: 'eosknightscd',\n        quantity: '0.0001 EOS',\n        memo: \"test\"\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <button onClick={this.onClick}>Test</button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './js/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}