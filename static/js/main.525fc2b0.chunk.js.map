{"version":3,"sources":["Utils/ScatterBridge.js","Components/Header/Header.js","App/App.js","index.js"],"names":["ScatterBridge","network","appName","Object","classCallCheck","this","ScatterJS","plugins","ScatterEOS","account","eosOptions","expireInSeconds","isConnected","contract","eosApi","net","Network","fromJson","auth","connect","console","error","eos","Eos","login","then","id","_this","authorization","concat","name","authority","Header","react_default","a","createElement","className","App","props","possibleConstructorReturn","getPrototypeOf","call","blockchain","chainId","host","port","protocol","scatter","onClick","bind","assertThisInitialized","url","getTableUrl","fetch","method","body","code","table","loadContract","signup","Components_Header_Header","Component","ReactDOM","render","src_App_App","document","getElementById"],"mappings":"qeAIqBA,aAEnB,SAAAA,EAAYC,EAASC,GAAUC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAC7BK,KAAKH,QAAUA,EACfI,IAAUC,QAAQ,IAAIC,KAEtBH,KAAKI,QAAU,KACfJ,KAAKK,WAAa,CAAEC,gBAAgB,IACpCN,KAAKO,aAAc,EACnBP,KAAKQ,SAAW,KAEhBR,KAAKS,OAAS,KACdT,KAAKU,IAAMT,IAAUU,QAAQC,SAAShB,GACtCI,KAAKa,KAAO,uLAINjB,EAAUI,KAAKU,aACIT,IAAUa,QAAQd,KAAKH,QAAS,CAACD,sBAA1DI,KAAKO,mBACAP,KAAKO,qDACDQ,QAAQC,MAAM,oCAGvBhB,KAAKS,OAASR,IAAUgB,IAAIjB,KAAKU,IAAKQ,cAChCjB,IAAUkB,QAAQC,KAAK,SAAAC,GACzB,IAAIA,EAAI,OAAON,QAAQC,MAAM,eAC7BM,EAAKlB,QAAUH,IAAUG,QAAQ,OACjCkB,EAAKT,KAAO,CAACU,cAAc,IAAAC,OAAIF,EAAKlB,QAAQqB,KAAjB,KAAAD,OAAyBF,EAAKlB,QAAQsB,8LAIpDD,mFACKzB,KAAKS,OAAOD,SAASiB,UAA3CzB,KAAKQ,4HC3BMmB,wBANA,kBACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,WCyDWC,cApDb,SAAAA,EAAYC,GAAO,IAAAX,EAAA,OAAAxB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,IACjBV,EAAAxB,OAAAoC,EAAA,EAAApC,CAAAE,KAAAF,OAAAqC,EAAA,EAAArC,CAAAkC,GAAAI,KAAApC,KAAMiC,KAEDrC,QAAU,CACXyC,WAAW,MACXC,QAAQ,mEACRC,KAAM,iBACNC,KAAK,IACLC,SAAS,SAGbnB,EAAKoB,QAAU,IAAI/C,EAAc2B,EAAK1B,QAAS,YAC/C0B,EAAKqB,QAAUrB,EAAKqB,QAAQC,KAAb9C,OAAA+C,EAAA,EAAA/C,QAAA+C,EAAA,EAAA/C,CAAAwB,KAZEA,6EAoBjB,OAJYtB,KAAKJ,QAAQ6C,SAAW,MACxBzC,KAAKJ,QAAQ2C,KAAO,IACpBvC,KAAKJ,QAAQ4C,KACb,+KAKNM,EAAM9C,KAAK+C,uBACEC,MAAMF,EAAK,CAC5BG,OAAQ,OACRC,KAAM,CACJC,KAAM,eACNC,MAAO,oRAQLV,EAAU1C,KAAK0C,iBACfA,EAAQ5B,iCACR4B,EAAQW,aAAa,uCACrBX,EAAQlC,SAAS8C,OAAOZ,EAAQtC,QAAQqB,KAAMiB,EAAQ7B,yIAI5D,OACEe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyB,EAAD,cA/CUC,aCFlBC,IAASC,OAAO9B,EAAAC,EAAAC,cAAC6B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.525fc2b0.chunk.js","sourcesContent":["import ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs';\nimport Eos from 'eosjs';\n\nexport default class ScatterBridge {\n\n  constructor(network, appName) {\n    this.appName = appName;\n    ScatterJS.plugins(new ScatterEOS());\n\n    this.account = null;\n    this.eosOptions = { expireInSeconds:60 };\n    this.isConnected = false;\n    this.contract = null;\n\n    this.eosApi = null;\n    this.net = ScatterJS.Network.fromJson(network);\n    this.auth = null;\n  }\n\n  async connect() {\n    const network = this.net;\n    this.isConnected = await ScatterJS.connect(this.appName, {network});\n    if (!this.isConnected) {\n      return console.error('connection failed');\n    }\n\n    this.eosApi = ScatterJS.eos(this.net, Eos);\n    await ScatterJS.login().then(id => {\n        if(!id) return console.error('no identity');\n        this.account = ScatterJS.account('eos');\n        this.auth = {authorization:[`${this.account.name}@${this.account.authority}`]};\n    });\n  }\n\n  async loadContract(name) {\n    this.contract = await this.eosApi.contract(name);\n  }\n}","import React from 'react';\nimport './Header.css';\n\nconst Header = () => (\n    <div className=\"Header\">\n        POSTS\n    </div>\n)\n\nexport default Header;","import React, { Component } from \"react\";\nimport ScatterBridge from \"../Utils/ScatterBridge\";\nimport \"./App.css\";\nimport {\n    Header,\n    PostWrapper\n} from \"../Components/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.network = {\n        blockchain:'eos',\n        chainId:'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\n        host: \"api.eoseoul.io\",\n        port:443,\n        protocol:'https'\n    };\n\n    this.scatter = new ScatterBridge(this.network, \"EK Event\");\n    this.onClick = this.onClick.bind(this);\n  }\n\n  getTableUrl() {\n    const url = this.network.protocol + \"://\" +\n                this.network.host + \":\" + \n                this.network.port + \n                \"/v1/chain/get_table_rows\"\n    return url;    \n  }\n\n  async load() {\n    const url = this.getTableUrl();\n    let result = await fetch(url, {\n      method: \"POST\",\n      body: {\n        code: \"eosknightsio\",\n        table: \"itemevt\"\n      }\n    });\n\n\n  }\n\n  async onClick() {\n    const scatter = this.scatter;\n    await scatter.connect();\n    await scatter.loadContract(\"eosknightsio\");\n    await scatter.contract.signup(scatter.account.name, scatter.auth);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}