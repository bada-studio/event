{"version":3,"sources":["js/scatterBridge.js","js/app.js","index.js"],"names":["ScatterBridge","network","appName","Object","classCallCheck","this","ScatterJS","plugins","ScatterEOS","scatter","Network","fromJson","account","eosOptions","expireInSeconds","eosApi","eos","Eos","isConnected","connect","then","connected","_this","console","log","login","_this2","actions","length","transact","blocksBehind","expireSeconds","contract","actionName","data","perm","arguments","undefined","authority","name","authorization","actor","permission","App","props","possibleConstructorReturn","getPrototypeOf","call","blockchain","protocol","host","port","chainId","onClick","bind","assertThisInitialized","getIdentity","react_default","a","createElement","className","Component","ReactDOM","render","js_app","document","getElementById"],"mappings":"2bAIqBA,aAEjB,SAAAA,EAAYC,EAASC,GAAUC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAC3BK,KAAKH,QAAUA,EACfI,IAAUC,QAAQ,IAAIC,KAEtBH,KAAKI,QAAUH,IAAUG,QACzBJ,KAAKJ,QAAUK,IAAUI,QAAQC,SAASV,GAC1CI,KAAKO,QAAU,KAEfP,KAAKQ,WAAa,CAAEC,gBAAgB,IACpCT,KAAKU,OAASV,KAAKI,QAAQO,IAAIX,KAAKJ,QAASgB,IAAKZ,KAAKQ,YACvDR,KAAKa,aAAc,2LAIbb,KAAKI,QAAQU,QAAQd,KAAKH,QAASG,KAAKJ,SAASmB,KAAK,SAAAC,GACxDC,EAAKJ,YAAcG,EACnBE,QAAQC,IAAI,aAAeH,8PAO3BhB,KAAKa,4CACCb,KAAKI,QAAQgB,QAAQL,KAAK,WAC5BM,EAAKd,QAAUc,EAAKjB,QAAQG,QAAQ,sCAGxCW,QAAQC,IAAI,oMAIPG,uEACNA,EAAQC,uCACDvB,KAAKU,OAAOc,SAAS,CACvBF,QAASA,GACV,CAACG,aAAc,EAAGC,cAAe,8IAI9B9B,GACVI,KAAKU,OAASV,KAAKI,QAAQO,IAAIf,EAASgB,IAAKZ,KAAKQ,+CAG3CmB,EAAUC,EAAYC,GAAqC,IAA/BC,EAA+BC,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAAxB/B,KAAKO,QAAQ0B,UACvD,MAAO,CACH1B,QAASoB,EACTO,KAAMN,EACNO,cAAe,CAAC,CACZC,MAAOpC,KAAKO,QAAQ2B,KACpBG,WAAYP,IAEhBD,KAAMA,YCtBHS,cA/Bb,SAAAA,EAAYC,GAAO,IAAAtB,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,IACjBrB,EAAAnB,OAAA0C,EAAA,EAAA1C,CAAAE,KAAAF,OAAA2C,EAAA,EAAA3C,CAAAwC,GAAAI,KAAA1C,KAAMuC,KAED3C,QAAU,CACb+C,WAAY,MACZC,SAAU,QACVC,KAAM,iBACNC,KAAM,IACNC,QAAS,oEAGX9B,EAAKb,QAAU,IAAIT,EAAcsB,EAAKrB,QAAS,oBAC/CqB,EAAK+B,QAAU/B,EAAK+B,QAAQC,KAAbnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAAmB,KAZEA,iMAgBXjB,KAAKI,QAAQU,iCACbd,KAAKI,QAAQ+C,iJAInB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,UAAQN,QAAShD,KAAKgD,SAAtB,iBAzBQQ,aCClBC,IAASC,OAAON,EAAAC,EAAAC,cAACK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.573fa70c.chunk.js","sourcesContent":["import ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs';\nimport Eos from 'eosjs';\n\nexport default class ScatterBridge {\n\n    constructor(network, appName) {\n        this.appName = appName;\n        ScatterJS.plugins(new ScatterEOS());\n\n        this.scatter = ScatterJS.scatter;\n        this.network = ScatterJS.Network.fromJson(network);\n        this.account = null;\n\n        this.eosOptions = { expireInSeconds:60 };\n        this.eosApi = this.scatter.eos(this.network, Eos, this.eosOptions);\n        this.isConnected = false;\n    }\n\n    async connect() {\n        await this.scatter.connect(this.appName, this.network).then(connected => {\n            this.isConnected = connected;\n            console.log(\"connected:\" + connected);\n            //window.ScatterJS = null;\n            //window.ScatterJS = null;\n        });\n    }\n\n    async login() {\n        if (this.isConnected) {\n            await this.scatter.login().then(() => {\n                this.account = this.scatter.account('eos');\n            });\n        } else {\n            console.log(\"check connection first!\");\n        }\n    }\n\n    async sendTx(actions) {\n        if(actions.length) {\n            await this.eosApi.transact({\n                actions: actions\n            }, {blocksBehind: 3, expireSeconds: 30 });\n        }\n    }\n\n    updateNetwork(network) {\n        this.eosApi = this.scatter.eos(network, Eos, this.eosOptions);\n    }\n\n    makeAction(contract, actionName, data, perm = this.account.authority) {\n        return {\n            account: contract,\n            name: actionName,\n            authorization: [{\n                actor: this.account.name,\n                permission: perm// this.currentAccount.authority\n            }],\n            data: data\n        };\n    }\n}","import React, { Component } from \"react\";\nimport \"../css/app.css\";\nimport ScatterBridge from \"./scatterBridge\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.network = {\n      blockchain: \"eos\",\n      protocol: \"https\",\n      host: \"api.eoseoul.io\",\n      port: 443,\n      chainId: \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\"\n    };\n\n    this.scatter = new ScatterBridge(this.network, \"EOS Knight Event\");\n    this.onClick = this.onClick.bind(this);\n  }\n\n  async onClick() {\n    await this.scatter.connect();\n    await this.scatter.getIdentity();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <button onClick={this.onClick}>Test</button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './js/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}