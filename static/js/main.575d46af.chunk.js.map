{"version":3,"sources":["js/scatterBridge.js","js/app.js","index.js"],"names":["ScatterBridge","network","appName","Object","classCallCheck","this","ScatterJS","plugins","ScatterEOS","scatter","currentAccount","reqFields","accounts","eosOptions","expireInSeconds","eosApi","eos","Eos","isConnected","connect","then","connected","getIdentity","identity","find","x","blockchain","actions","length","transact","blocksBehind","expireSeconds","contract","actionName","data","perm","arguments","undefined","authority","account","name","authorization","actor","permission","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","scatterBridge","protocol","host","port","chainId","onClick","bind","assertThisInitialized","setState","componentWillMount","componentDidMount","react_default","a","createElement","className","Component","ReactDOM","render","js_app","document","getElementById"],"mappings":"2bAIqBA,aAEjB,SAAAA,EAAYC,EAASC,GAAUC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAC3BK,KAAKH,QAAUA,EACfI,IAAUC,QAAQ,IAAIC,KAEtBH,KAAKI,QAAUH,IAAUG,QACzBJ,KAAKJ,QAAUA,EACfI,KAAKK,eAAiB,KACtBL,KAAKM,UAAY,CAAEC,SAAU,CAACX,IAE9BI,KAAKQ,WAAa,CAAEC,gBAAgB,IACpCT,KAAKU,OAASV,KAAKI,QAAQO,IAAIf,EAASgB,IAAKZ,KAAKQ,YAClDR,KAAKa,aAAc,gLAOMb,KAAKI,QAAQU,QAAQd,KAAKH,SAASkB,KAAK,SAAAC,aAAjEhB,KAAKa,uQAMFb,KAAKa,4CACEb,KAAKI,QAAQa,YAAYjB,KAAKM,kBACpCN,KAAKK,eAAiBL,KAAKI,QAAQc,SAASX,SAASY,KAAK,SAAAC,GAAC,MAAqB,QAAjBA,EAAEC,sLAI5DC,uEACNA,EAAQC,uCACDvB,KAAKU,OAAOc,SAAS,CACvBF,QAASA,GACV,CAACG,aAAc,EAAGC,cAAe,8IAI9B9B,GACVI,KAAKU,OAASV,KAAKI,QAAQO,IAAIf,EAASgB,IAAKZ,KAAKQ,+CAG3CmB,EAAUC,EAAYC,GAA4C,IAAtCC,EAAsCC,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAA/B/B,KAAKK,eAAe4B,UAC9D,MAAO,CACHC,QAASP,EACTQ,KAAMP,EACNQ,cAAe,CAAC,CACZC,MAAOrC,KAAKK,eAAe8B,KAC3BG,WAAYR,IAEhBD,KAAMA,YCPHU,cA5Cb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA3C,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,IACjBE,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAE,KAAAF,OAAA6C,EAAA,EAAA7C,CAAAyC,GAAAK,KAAA5C,KAAMwC,KAEDK,MAAQ,CACXC,cAAe,KACflD,QAAS,CACPyB,WAAY,MACZ0B,SAAU,QACVC,KAAM,iBACNC,KAAM,IACNC,QAAS,qEAIbT,EAAKU,QAAUV,EAAKU,QAAQC,KAAbtD,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA2C,KAdEA,oFAkBjBzC,KAAKsD,SAAS,CACZR,cAAe,IAAInD,EAAcK,KAAK6C,MAAMjD,QAAS,0LAKjDI,KAAK6C,MAAMC,cAAchC,iCACzBd,KAAK6C,MAAMC,cAAc7B,iQAI/BjB,KAAKuD,8BACCvD,KAAKwD,uJAIX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,UAAQR,QAASnD,KAAKmD,SAAtB,iBAtCQU,aCClBC,IAASC,OAAON,EAAAC,EAAAC,cAACK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.575d46af.chunk.js","sourcesContent":["import ScatterJS from 'scatterjs-core';\nimport ScatterEOS from 'scatterjs-plugin-eosjs';\nimport Eos from 'eosjs';\n\nexport default class ScatterBridge {\n\n    constructor(network, appName) {\n        this.appName = appName;\n        ScatterJS.plugins(new ScatterEOS());\n\n        this.scatter = ScatterJS.scatter;\n        this.network = network;\n        this.currentAccount = null;\n        this.reqFields = { accounts: [network] };\n\n        this.eosOptions = { expireInSeconds:60 };\n        this.eosApi = this.scatter.eos(network, Eos, this.eosOptions);\n        this.isConnected = false;\n\n        //window.ScatterJS = null;\n        //window.ScatterEOS = null;\n    }\n\n    async connect() {\n        this.isConnected = await this.scatter.connect(this.appName).then(connected => {\n            //window.ScatterJS = null;\n        });\n    }\n\n    async getIdentity() {\n        if(this.isConnected) {\n            await this.scatter.getIdentity(this.reqFields);\n            this.currentAccount = this.scatter.identity.accounts.find(x => x.blockchain === \"eos\");\n        }\n    }\n\n    async sendTx(actions) {\n        if(actions.length) {\n            await this.eosApi.transact({\n                actions: actions\n            }, {blocksBehind: 3, expireSeconds: 30 });\n        }\n    }\n\n    updateNetwork(network) {\n        this.eosApi = this.scatter.eos(network, Eos, this.eosOptions);\n    }\n\n    makeAction(contract, actionName, data, perm = this.currentAccount.authority) {\n        return {\n            account: contract,\n            name: actionName,\n            authorization: [{\n                actor: this.currentAccount.name,\n                permission: perm// this.currentAccount.authority\n            }],\n            data: data\n        };\n    }\n}","import React, { Component } from \"react\";\nimport \"../css/app.css\";\nimport ScatterBridge from \"./scatterBridge\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scatterBridge: null,\n      network: {\n        blockchain: \"eos\",\n        protocol: \"https\",\n        host: \"api.eoseoul.io\",\n        port: 443,\n        chainId: \"aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906\"\n      }\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      scatterBridge: new ScatterBridge(this.state.network, \"EOS Knight Event\")\n    });\n  }\n\n  async componentDidMount() {\n    await this.state.scatterBridge.connect();\n    await this.state.scatterBridge.getIdentity();\n  }\n\n  async onClick() {\n    this.componentWillMount();\n    await this.componentDidMount();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <button onClick={this.onClick}>Test</button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './js/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}